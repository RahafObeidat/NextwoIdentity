@using Microsoft.AspNetCore.Identity;
@inject SignInManager<IdentityUser> signInManager

@model IEnumerable<Product>
@{
    ViewData["Title"] = "AllProducts";
}

<h1>AllProducts</h1>

@if (signInManager.IsSignedIn(User))
{
    if (User.IsInRole("Administrator"))
    {
        <a asp-action="CreateProduct" asp-controller="Product" class="btn btn-primary btn-sm">Create new Product</a>
    }
}


<table class="table table-bordered">
    <tr>
        <th> @Html.DisplayNameFor(c=>c.ProductName)</th>
        <th> @Html.DisplayNameFor(c=>c.ProductDescription)</th>
        <th> @Html.DisplayNameFor(c=>c.Category!.CategoryName)</th>
        <th>operations</th>
    </tr>
    @foreach (var pro in Model)
    {
        <tr>
            <td>@pro.ProductName</td>
            <td>@pro.ProductDescription</td>
            <td>@pro.Category!.CategoryName</td>
            <td>
                <a asp-route-id="@pro.ProductId" asp-action="Details" asp-controller="Product" class="btn btn-primary btn-sm">Details</a>
                @if (signInManager.IsSignedIn(User))
                {
                    if (User.IsInRole("Administrator"))
                    {
                        <a asp-route-id="@pro.ProductId" asp-action="EditProduct" asp-controller="Product" class="btn btn-primary btn-sm">Edit</a>
                        <a asp-route-id="@pro.ProductId" asp-action="DeleteProduct" asp-controller="Product" class="btn btn-primary btn-sm">Delete</a>
                    }
                }
              
               
            </td>
        </tr>

    }
</table>
